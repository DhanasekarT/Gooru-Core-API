<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:security="http://www.springframework.org/schema/security"
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

<!-- 	<security:global-method-security pre-post-annotations="enabled"/>
 -->	
	<!--<security:global-method-security>
		<security:protect-pointcut expression="execution(* com.google.gooru.classplan.service.ClassPlanManager.delete*(..))" access="ROLE_TEACHER,ROLE_CONTENT_ADMIN"/>
		<security:protect-pointcut expression="execution(* com.google.gooru.classplan.service.ClassPlanManager.save*(..))" access="ROLE_TEACHER,ROLE_CONTENT_ADMIN"/>
		<security:protect-pointcut expression="execution(* com.google.gooru.classplan.service.ClassPlanManager.update*(..))" access="ROLE_TEACHER,ROLE_CONTENT_ADMIN"/>
		<security:protect-pointcut expression="execution(* com.google.gooru.classplan.service.ClassPlanManager.copy*(..))" access="ROLE_TEACHER,ROLE_CONTENT_ADMIN"/>
        </security:global-method-security>-->
    
	<bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
		<security:filter-chain-map path-type="ant">
			<security:filter-chain pattern="/scripts/**" filters="none" />
			<security:filter-chain pattern="/images/**"	filters="none" />
			<security:filter-chain pattern="/styles/**"	filters="none" />
			<security:filter-chain pattern="/static/**"	filters="none" />
			<security:filter-chain pattern="/templates/**" filters="none" />
			<security:filter-chain pattern="/**" filters="gooruFilter" />			
		</security:filter-chain-map>
	</bean>
	
	<bean id="gooruFilter"  class="org.ednovo.gooru.web.filter.AuthorizationFilter">
	</bean>
	
	<bean id="requestSupport"  class="org.ednovo.gooru.core.api.model.RequestSupport" scope="request"/>

	<!-- <security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="preauthAuthProvider" />
	</security:authentication-manager>

	<bean id="preauthAuthProvider" class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">				
		<property name="preAuthenticatedUserDetailsService">
			<bean id="userDetailsServiceWrapper" class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
				<property name="userDetailsService" ref="userDetailsService" />
			</bean>
		</property>				
	</bean>	  -->
</beans>
